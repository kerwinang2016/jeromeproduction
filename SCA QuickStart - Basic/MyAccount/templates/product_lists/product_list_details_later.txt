<%
	var config = view.application.Configuration.product_lists
	,	items = view.model.get('items')
	, 	out_of_stock_items = items.filter(function(product_list_item) { return !product_list_item.get('item').ispurchasable; })
	,	type = view.model.get('type').name
	,	items_length = items.length
	,	items_length_message = '';

	console.log('view.model',view.model);
	console.log('view.model.get("items")',view.model.get('items'));

	if (items_length === 0)
	{
		items_length_message = _('(No items yet)').translate();
	}
	else if (items_length === 1)
	{
		items_length_message = _('($(0) Item)').translate(items_length);
	}
	else if (items_length > 1)
	{
		items_length_message = _('($(0) Items)').translate(items_length);
	}

	console.log('product_list_details_later.txt',view);

	var arrObjFilteredItems = [];
	var arrObjFilteredItemsTotal = 0;
	var hasArrObjFilteredItems = false;
	var stFilterSaveForLaterRef = view.model.get('swx_filter_save_for_later_client');
	var hasStFilterSaveForLaterRef = (!_.isNullOrEmpty(stFilterSaveForLaterRef)) ? true : false;

	var collpaseClass = "collapse";
	

	if (hasStFilterSaveForLaterRef)
	{
		var stItems = JSON.stringify(items);
		var arrObjItems = JSON.parse(stItems)
		arrObjFilteredItems = _.getArrObjFilteredSaveForLaterItems(arrObjItems, stFilterSaveForLaterRef);
		arrObjFilteredItemsTotal = (!_.isNullOrEmpty(arrObjFilteredItems)) ? arrObjFilteredItems.length : 0;
		hasArrObjFilteredItems = (arrObjFilteredItemsTotal != 0) ? true : false;
		//collpaseClass = "in collapse";
	}
	

%>

	<style>
		.list-header-title .accordion-toggle:after {
			font-family: FontAwesome;
			font-style: normal;
			font-weight: normal;
			content: "\f054";
			/*Font awesome icon chevron right*/
			float: right;
			color: grey;
		}

		.list-header-title .accordion-toggle:hover {
			text-decoration: none;
			color: grey;
		}

		.list-header-title .accordion-toggle.collapsed:after {
			content: "\f078";
			/* Font awesome chevron down*/
		}
	</style>
	<% if(view.model) { 

	var items = view.model.get('items');
	if(items_length > 0){				
		var productListDisplay = null;
		productListDisplay = function (row)
			{
				return SC.macros['productListDisplayLater'](row, view, null, arrObjFilteredItems, 'T');
			}	
	%>
	<header>


		<h3 class="list-header-title" style="padding-bottom: 20px;border-bottom: 1px solid #eee;">

			<a data-toggle="collapse" data-target="#saveForLaterItemsCart" aria-expanded="true" aria-controls="collapseOne" class="accordion-toggle"
			 style="text-decoration:none;color:grey;">
				<!--<%= (type === 'predefined' ||Â type === 'later') ? _(view.model.get('name')).translate() : view.model.get('name') %>-->
				Saved Items
			</a>
		</h3>


		<div data-confirm-message class="confirm-message"></div>

	
	</header>

	<div id="saveForLaterItemsCart"  class="<%=collpaseClass%>" >

		<div>
			<div class="span1">

			</div>
			<div class="span4" style="font-weight: 600;">
				Item
			</div>
			<div class="span3" style="text-align:right;font-weight:600">
				Created Date
			</div>
			<div class="span4" style="text-align:center;">
				
			</div>
		</div>
		<div class="product-list-items" data-type="product-list-items">
			<% console.log(items.models);%>
			<%= displayInRows(items.models, productListDisplay, 1) %>
		</div>

	<% }%> 
	<% } %>
	</div>