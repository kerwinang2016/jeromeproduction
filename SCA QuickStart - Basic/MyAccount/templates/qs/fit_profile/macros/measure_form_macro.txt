<% registerMacro('measureForm', function (fields, values, paramEvent,selectedItemType) { %>
	
	<%
		var eventValue = (!_.isNullOrEmpty(paramEvent) && paramEvent == 'add') ? 'add' : 'viewedit';
		var isAddEvent = (eventValue == 'add') ? true : false;
		var isViewEdit = (eventValue == 'viewedit') ? true : false;
		console.log('measureForm>selectedItemType',selectedItemType);
	%>
	
	<% if(fields && fields.fieldset && fields.fieldset.length){ %>
		<h4 class="section-header"><%= _('Measurement Details').translate() %></h4>

		<% _.each(fields.fieldset, function(fieldset){ %>
			<% if(fieldset.name == 'main'){ %>
				<div class="main-section">
					<% if(fields.type == 'Body'){ %>
						
						<% _.each(fieldset.fields, function(field){ 
							var mainBodyValue = null
							,	fieldValue = _.where(values, {name: field.name})
							if(fieldValue.length){
								mainBodyValue = fieldValue[0].value;
							}

						%>
							<%= SC.macros.bodyMeasureField(field, mainBodyValue, fieldset.name,0,0,selectedItemType) %>
						<% }) %>
					<% } else { %>
						<% _.each(fieldset.fields, function(field){ 
							var mainBlockValue = null
							,	fieldValue = _.where(values, {name: field.name})
							if(fieldValue.length){
								mainBlockValue = fieldValue[0].value;
							}
						%>	
							<%= SC.macros.blockMeasureField(field, mainBlockValue) %>
						<% }) %>
					<% } %>
				</div>
			<% } else { %>	
				<div class="<%= fieldset.name %>-section">
					<h4><%= fieldset.label %></h4>
					<hr />
					<% if(fields.type == 'Body'){ %>
						<% if(fieldset.name == "body-measurement"){ %>
							<div class="row-fluid">
								<div class="span3-profile offset2"><%= _('Measurement').translate() %></div>
								<div class="span3-profile"><%= _('Allowance').translate() %></div>
								<div class="span3-profile"><%= _('Finished').translate() %></div>
								<div class="span3-profile"><%= _('Range').translate() %></div>
							</div>
						<% } %>
						<% _.each(fieldset.fields, function(field){

							var fieldName = field.name;
							
							console.log('values',values);
							var bodyValue = 0
							,	allowance = 0
							,	baseAllowance = 0
							
							var fieldValue = _.where(values, {name: fieldName});
							if(fieldValue.length === 0){
								fieldValue = _.where(values, {name: fieldName.replace('-',' ')});
								fieldName = fieldName.replace('-',' ');
							}
							if(fieldValue.length === 0){
								fieldValue = _.where(values, {name: fieldName.replace('+',' ')});
								fieldName = fieldName.replace('+',' ');
							}

							console.log('MyAccount>measure_form_macro.txt>fieldValue',fieldValue);
							var	allowFieldValue = _.where(values, {name: "allowance-" + fieldName})
							var	lookUpField = _.where(values, {name: fields["lookup-key"]});
							
							if(values) {
								if(fieldValue.length){
									bodyValue = fieldValue[0].value;
								}
								if(allowFieldValue.length){
									allowance = allowFieldValue[0].value;
								}
								if(lookUpField.length){
									baseAllowance = _.where(fields["lookup-value"][lookUpField[0].value], {field: field.name})[0];
									baseAllowance = baseAllowance && baseAllowance.value ? baseAllowance.value : 0;
								}
							} else {
								baseAllowance = _.where(fields["lookup-value"]["Very Slim"], {field: field.name})[0];
								baseAllowance = baseAllowance && baseAllowance.value ? baseAllowance.value : 0;
							}
						%>
							<% 
								//if(bodyValue !== null && bodyValue!== '' && bodyValue!== undefined){
									//bodyValue = bodyValue.replace('+',' ');
								//}
							
							 %>
							<%
								console.log('MyAccount>measure_form_macro.txt>field.name',field.name)
								console.log('MyAccount>measure_form_macro.txt>values',values);
								console.log('bodyValue>',bodyValue);
								console.log('baseAllowance>',baseAllowance);
								console.log('allowance>',allowance);
							%>
							<%= SC.macros.bodyMeasureField(field, bodyValue, fieldset.name, baseAllowance, allowance,selectedItemType) %>
						<% }) %>
					<% } else { %>	
						<div class="row-fluid">
							<div class="span3 offset2"><%= fieldset["max-label"] %></div>
							<div class="span3"><%= fieldset["min-label"] %></div>
						</div>
						<% _.each(fieldset.fields, function(field){ 
							var blockValueMin = _.where(values, {name: field.name + "-min"})[0]
							,	blockValueMax = _.where(values, {name: field.name + "-max"})[0]
							,	value = [blockValueMin, blockValueMax];					
						%>
							<%= SC.macros.blockMeasureField(field, value, fields.increment) %>
						<% }) %>
					<% } %>
				</div>				
			<% } %>	
		<% }) %>

		<div class="form-actions" style="display: none;">
			<button id="swx-fitprofile-submit" class="btn btn-primary" type="submit">Submit</button>
			<button data-action="reset" class="btn hide" type="reset">Cancel</button>

			<% if (isViewEdit) { %>
				<button id="swx-fitprofile-remove" class="btn" type="button" style="">Remove</button>
				<button id="swx-fitprofile-copy" class="btn" type="button" style="">Copy</button>
			<% } %>

		</div>

	<% } %>	

<% }) %>